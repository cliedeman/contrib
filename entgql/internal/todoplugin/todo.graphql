enum Status {
  IN_PROGRESS
  COMPLETED
}

scalar Time

type Todo implements Node {
  id: ID!
  createdAt: Time
  status: Status!
  priority: Int!
  text: String!
  parent: Todo
  children: [Todo!]
}

input TodoInput {
  status: Status! = IN_PROGRESS
  priority: Int
  text: String!
  parent: ID
}

enum OrderDirection {
  ASC
  DESC
}

enum TodoOrderField {
  CREATED_AT
  PRIORITY
  STATUS
  TEXT
}

input TodoOrder {
  direction: OrderDirection!
  field: TodoOrderField
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  todos(
    after: Cursor
    first: Int
    before: Cursor
    last: Int
    orderBy: TodoOrder
  ): TodoConnection
}

type Mutation {
  createTodo(todo: TodoInput!): Todo!
  clearTodos: Int!
}
